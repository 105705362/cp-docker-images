version: "2"

networks:
  zk:
    # Use a custom driver
    driver: bridge

services:
  zookeeper-1:
    image: confluentinc/zookeeper:latest
    environment:
      SERVER_ID: 1
      ZK_SERVERS: "zookeeper-1:2888:3888;zookeeper-2:32888:33888;zookeeper-3:42888:43888"
    networks:
      - default
      - zk
    ports:
      - "22181:2181"
      - "22888:2888"
      - "23888:3888"

  zookeeper-2:
    image: confluentinc/zookeeper:latest
    environment:
      SERVER_ID: 2
      ZK_SERVERS: "zookeeper-1:2888:3888;zookeeper-2:32888:33888;zookeeper-3:42888:43888"
    networks:
      - default
      - zk
    ports:
      - "32181:2181"
      - "32888:2888"
      - "33888:3888"

  zookeeper-3:
    image: confluentinc/zookeeper:latest
    environment:
      SERVER_ID: 3
      ZK_SERVERS: "zookeeper-1:2888:3888;zookeeper-2:32888:33888;zookeeper-3:42888:43888"
    networks:
      - default
      - zk
    ports:
      - "42181:2181"
      - "42888:2888"
      - "43888:3888"

  kafka-1:
    image: confluentinc/kafka:latest
    networks:
      - default
      - zk
    environment:
      BROKER_ID: 1
      ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181"
      ADVERTISED_LISTENERS: "PLAINTEXT://kafka-1:9092"

  kafka-2:
    image: confluentinc/kafka:latest
    networks:
      - default
      - zk
    environment:
      BROKER_ID: 2
      ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181"
      ADVERTISED_LISTENERS: "PLAINTEXT://kafka-2:9092"

  kafka-3:
    image: confluentinc/kafka:latest
    networks:
      - default
      - zk
    environment:
      BROKER_ID: 3
      ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181"
      ADVERTISED_LISTENERS: "PLAINTEXT://kafka-3:9092"

  kafka-ssl-1:
    image: confluentinc/kafka:latest
    networks:
      - default
      - zk
    environment:
      BROKER_ID: 1
      ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181/ssl"
      ADVERTISED_LISTENERS: "SSL://kafka-ssl-1:9093"
      SSL_KEYSTORE_FILENAME: "kafka.broker1.keystore.jks"
      SSL_KEYSTORE_CREDENTIALS: "broker1_keystore_creds"
      SSL_KEY_CREDENTIALS: "broker1_sslkey_creds"
      SSL_TRUSTSTORE_FILENAME: "kafka.broker1.truststore.jks"
      SSL_TRUSTSTORE_CREDENTIALS: "broker1_truststore_creds"
      SECURITY_INTER_BROKER_PROTOCOL: SSL
    volumes:
      - /tmp/kafka-cluster-bridge-test/secrets:/etc/kafka/secrets

  kafka-ssl-2:
    image: confluentinc/kafka:latest
    networks:
      - default
      - zk
    environment:
      BROKER_ID: 2
      ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181/ssl"
      ADVERTISED_LISTENERS: "SSL://kafka-ssl-2:9093"
      SSL_KEYSTORE_FILENAME: "kafka.broker2.keystore.jks"
      SSL_KEYSTORE_CREDENTIALS: "broker2_keystore_creds"
      SSL_KEY_CREDENTIALS: "broker2_sslkey_creds"
      SSL_TRUSTSTORE_FILENAME: "kafka.broker2.truststore.jks"
      SSL_TRUSTSTORE_CREDENTIALS: "broker2_truststore_creds"
      SECURITY_INTER_BROKER_PROTOCOL: SSL
    volumes:
      - /tmp/kafka-cluster-bridge-test/secrets:/etc/kafka/secrets


  kafka-ssl-3:
    image: confluentinc/kafka:latest
    networks:
      - default
      - zk
    environment:
      BROKER_ID: 3
      ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181/ssl"
      ADVERTISED_LISTENERS: "SSL://kafka-ssl-3:9093"
      SSL_KEYSTORE_FILENAME: "kafka.broker3.keystore.jks"
      SSL_KEYSTORE_CREDENTIALS: "broker3_keystore_creds"
      SSL_KEY_CREDENTIALS: "broker3_sslkey_creds"
      SSL_TRUSTSTORE_FILENAME: "kafka.broker3.truststore.jks"
      SSL_TRUSTSTORE_CREDENTIALS: "broker3_truststore_creds"
      SECURITY_INTER_BROKER_PROTOCOL: SSL
    volumes:
      - /tmp/kafka-cluster-bridge-test/secrets:/etc/kafka/secrets

  # kafka-ssl-producer:
  #   image: confluentinc/kafka:latest
  #   hostname: kafka-ssl-producer
  #   networks:
  #     - default
  #     - zk
  #   command: bash -c "cub kafka-ready $$ZOOKEEPER_CONNECT 3 20 20 10 && kafka-topics --create --topic foo --partitions 1 --replication-factor 3 --if-not-exists --zookeeper $$ZOOKEEPER_CONNECT && seq 100 | kafka-console-producer --broker-list kafka-ssl-1:9093 --topic foo --producer.config /etc/kafka/secrets/bridged.producer.ssl.config && echo SUCCESS"
  #   environment:
  #     ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181/ssl"
  #   volumes:
  #     - /tmp/kafka-cluster-bridge-test/secrets:/etc/kafka/secrets
  #
  # kafka-ssl-consumer:
  #   image: confluentinc/kafka:latest
  #   hostname: kafka-ssl-consumer
  #   networks:
  #     - default
  #     - zk
  #   command: bash -c "cub kafka-ready $$ZOOKEEPER_CONNECT 3 20 20 10 && kafka-console-consumer --bootstrap-server kafka-ssl-1:9093 --topic foo --new-consumer --from-beginning --consumer.config /etc/kafka/secrets/bridged.consumer.ssl.config --max-messages 10"
  #   environment:
  #     ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181/ssl"
  #   volumes:
  #     - /tmp/kafka-cluster-bridge-test/secrets:/etc/kafka/secrets

  kerberos:
    image: confluentinc/kerberos
    networks:
      - default
      - zk
    environment:
      BOOTSTRAP: 0
    volumes:
      - /tmp/kafka-cluster-bridge-test/secrets:/tmp/keytab
      - /dev/urandom:/dev/random

  kafka-sasl-ssl-1:
    image: confluentinc/kafka:latest
    hostname: kafka-sasl-ssl-1
    networks:
      - default
      - zk
    environment:
      BROKER_ID: 1
      ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181/saslssl"
      ADVERTISED_LISTENERS: "SASL_SSL://kafka-sasl-ssl-1:9094"
      SSL_KEYSTORE_FILENAME: "kafka.broker1.keystore.jks"
      SSL_KEYSTORE_CREDENTIALS: "broker1_keystore_creds"
      SSL_KEY_CREDENTIALS: "broker1_sslkey_creds"
      SSL_TRUSTSTORE_FILENAME: "kafka.broker1.truststore.jks"
      SSL_TRUSTSTORE_CREDENTIALS: "broker1_truststore_creds"
      SECURITY_INTER_BROKER_PROTOCOL: SASL_SSL
      SASL_MECHANISM_INTER_BROKER_PROTOCOL: GSSAPI
      SASL_ENABLED_MECHANISMS: GSSAPI
      SASL_KERBEROS_SERVICE_NAME: kafka
      LOG4J_ROOT_LOGLEVEL: DEBUG
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/secrets/bridged_broker1_jaas.conf -Djava.security.krb5.conf=/etc/kafka/secrets/bridged_krb.conf -Dsun.net.spi.nameservice.provider.1=sun -Dsun.security.krb5.debug=true"
    volumes:
      - /tmp/kafka-cluster-bridge-test/secrets:/etc/kafka/secrets

  kafka-sasl-ssl-2:
    image: confluentinc/kafka:latest
    hostname: kafka-sasl-ssl-2
    networks:
      - default
      - zk
    environment:
      BROKER_ID: 2
      ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181/saslssl"
      ADVERTISED_LISTENERS: "SASL_SSL://kafka-sasl-ssl-2:9094"
      SSL_KEYSTORE_FILENAME: "kafka.broker2.keystore.jks"
      SSL_KEYSTORE_CREDENTIALS: "broker2_keystore_creds"
      SSL_KEY_CREDENTIALS: "broker2_sslkey_creds"
      SSL_TRUSTSTORE_FILENAME: "kafka.broker2.truststore.jks"
      SSL_TRUSTSTORE_CREDENTIALS: "broker2_truststore_creds"
      SECURITY_INTER_BROKER_PROTOCOL: SASL_SSL
      SASL_MECHANISM_INTER_BROKER_PROTOCOL: GSSAPI
      SASL_ENABLED_MECHANISMS: GSSAPI
      SASL_KERBEROS_SERVICE_NAME: kafka
      LOG4J_ROOT_LOGLEVEL: DEBUG
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/secrets/bridged_broker2_jaas.conf -Djava.security.krb5.conf=/etc/kafka/secrets/bridged_krb.conf -Dsun.net.spi.nameservice.provider.1=sun -Dsun.security.krb5.debug=true"
    volumes:
      - /tmp/kafka-cluster-bridge-test/secrets:/etc/kafka/secrets


  kafka-sasl-ssl-3:
    image: confluentinc/kafka:latest
    hostname: kafka-sasl-ssl-3
    networks:
      - default
      - zk
    environment:
      BROKER_ID: 3
      ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181/saslssl"
      ADVERTISED_LISTENERS: "SASL_SSL://kafka-sasl-ssl-3:9094"
      SSL_KEYSTORE_FILENAME: "kafka.broker3.keystore.jks"
      SSL_KEYSTORE_CREDENTIALS: "broker3_keystore_creds"
      SSL_KEY_CREDENTIALS: "broker3_sslkey_creds"
      SSL_TRUSTSTORE_FILENAME: "kafka.broker3.truststore.jks"
      SSL_TRUSTSTORE_CREDENTIALS: "broker3_truststore_creds"
      SECURITY_INTER_BROKER_PROTOCOL: SASL_SSL
      SASL_MECHANISM_INTER_BROKER_PROTOCOL: GSSAPI
      SASL_ENABLED_MECHANISMS: GSSAPI
      SASL_KERBEROS_SERVICE_NAME: kafka
      LOG4J_ROOT_LOGLEVEL: DEBUG
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/secrets/bridged_broker3_jaas.conf -Djava.security.krb5.conf=/etc/kafka/secrets/bridged_krb.conf -Dsun.net.spi.nameservice.provider.1=sun -Dsun.security.krb5.debug=true"
    volumes:
      - /tmp/kafka-cluster-bridge-test/secrets:/etc/kafka/secrets


  # kafka-sasl-ssl-producer:
  #   image: confluentinc/kafka:latest
  #   hostname: kafka-sasl-ssl-producer
  #   networks:
  #     - default
  #     - zk
  #   command: bash -c "cub kafka-ready $$ZOOKEEPER_CONNECT 3 20 20 10 && kafka-topics --create --topic foo --partitions 1 --replication-factor 3 --if-not-exists --zookeeper $$ZOOKEEPER_CONNECT && seq 100 | kafka-console-producer --broker-list kafka-sasl-ssl-1:9094 --topic foo --producer.config /etc/kafka/secrets/bridged.producer.ssl.sasl.config && echo SUCCESS"
  #   environment:
  #     ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181/saslssl"
  #     KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/secrets/bridged_producer_jaas.conf -Djava.security.krb5.conf=/etc/kafka/secrets/bridged_krb.conf -Dsun.net.spi.nameservice.provider.1=sun -Dsun.security.krb5.debug=true"
  #   volumes:
  #     - /tmp/kafka-cluster-bridge-test/secrets:/etc/kafka/secrets
  #
  # kafka-sasl-ssl-consumer:
  #   image: confluentinc/kafka:latest
  #   hostname: kafka-sasl-ssl-consumer
  #   networks:
  #     - default
  #     - zk
  #   command: bash -c "cub kafka-ready $$ZOOKEEPER_CONNECT 3 20 20 10 && kafka-console-consumer --bootstrap-server kafka-sasl-ssl-1:9094 --topic foo --new-consumer --from-beginning --consumer.config /etc/kafka/secrets/bridged.consumer.ssl.sasl.config --max-messages 10"
  #   environment:
  #     ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181/saslssl"
  #     KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/secrets/bridged_consumer_jaas.conf -Djava.security.krb5.conf=/etc/kafka/secrets/bridged_krb.conf -Dsun.net.spi.nameservice.provider.1=sun -Dsun.security.krb5.debug=true"
  #   volumes:
  #     - /tmp/kafka-cluster-bridge-test/secrets:/etc/kafka/secrets
