#!/usr/bin/env bash

set -o nounset \
    -o errexit \
    -o verbose \
    -o xtrace

dub ensure BROKER_ID
dub ensure ZOOKEEPER_CONNECT
dub ensure ADVERTISED_LISTENERS

# By default, LISTENERS is derived from ADVERTISED_LISTENERS by replacing
# hosts with 0.0.0.0. This is good default as it ensures that the broker
# process listens on all ports.
if [[ -z "${LISTENERS-}" ]]
then
  export LISTENERS=$(cub listeners $ADVERTISED_LISTENERS)
fi
dub path /etc/kafka/ writable

# advertised.host, advertised.port, host and port are deprecated. Exit if these properties are set.
if [[ -n "${ADVERTISED_PORT-}" ]]
then
  echo "ADVERTISED_PORT is deprecated. Please use ADVERTISED_LISTENERS instead."
  exit 1
fi

if [[ -n "${ADVERTISED_HOST-}" ]]
then
  echo "ADVERTISED_HOST is deprecated. Please use ADVERTISED_LISTENERS instead."
  exit 1
fi

if [[ -n "${HOST-}" ]]
then
  echo "HOST is deprecated. Please use ADVERTISED_LISTENERS instead."
  exit 1
fi

if [[ -n "${PORT-}" ]]
then
  echo "PORT is deprecated. Please use ADVERTISED_LISTENERS instead."
  exit 1
fi

# Set if ADVERTISED_LISTENERS has SSL:// or SASL_SSL:// endpoints.
if [[ $ADVERTISED_LISTENERS == *"SSL://"* ]]
then
  echo "SSL is enabled."

  dub ensure SSL_KEYSTORE_FILENAME
  export SSL_KEYSTORE_LOCATION="/etc/kafka/secrets/$SSL_KEYSTORE_FILENAME"
  dub path $SSL_KEYSTORE_LOCATION exists

  dub ensure SSL_KEY_CREDENTIALS
  SSL_KEY_CREDENTIALS_LOCATION="/etc/kafka/secrets/$SSL_KEY_CREDENTIALS"
  dub path $SSL_KEY_CREDENTIALS_LOCATION exists
  export SSL_KEY_PASSWORD=$(cat $SSL_KEY_CREDENTIALS_LOCATION)

  dub ensure SSL_KEYSTORE_CREDENTIALS
  SSL_KEYSTORE_CREDENTIALS_LOCATION="/etc/kafka/secrets/$SSL_KEYSTORE_CREDENTIALS"
  dub path $SSL_KEYSTORE_CREDENTIALS_LOCATION exists
  export SSL_KEYSTORE_PASSWORD=$(cat $SSL_KEYSTORE_CREDENTIALS_LOCATION)

  dub ensure SSL_TRUSTSTORE_FILENAME
  export SSL_TRUSTSTORE_LOCATION="/etc/kafka/secrets/$SSL_TRUSTSTORE_FILENAME"
  dub path $SSL_TRUSTSTORE_LOCATION exists

  dub ensure SSL_TRUSTSTORE_CREDENTIALS
  SSL_TRUSTSTORE_CREDENTIALS_LOCATION="/etc/kafka/secrets/$SSL_TRUSTSTORE_CREDENTIALS"
  dub path $SSL_TRUSTSTORE_CREDENTIALS_LOCATION exists
  export SSL_TRUSTSTORE_PASSWORD=$(cat $SSL_TRUSTSTORE_CREDENTIALS_LOCATION)

fi

# Set if ADVERTISED_LISTENERS has SSL:// or SASL_SSL:// endpoints.
if [[ $ADVERTISED_LISTENERS =~ .*SASL_.*://.* ]]
then
  echo "SASL" is enabled.

  dub ensure KAFKA_OPTS

  if [[ ! $KAFKA_OPTS == *"java.security.auth.login.config"*  ]]
  then
    echo "KAFKA_OPTS should contain 'java.security.auth.login.config' property."
  fi
fi

if [[ -n "${KAFKA_JMX_OPTS-}" ]]
then
  if [[ ! $KAFKA_JMX_OPTS == *"com.sun.management.jmxremote.rmi.port"*  ]]
  then
    echo "KAFKA_OPTS should contain 'com.sun.management.jmxremote.rmi.port' property. It is required for accessing the JMX metrics externally."
  fi
fi

dub template "/etc/confluent/docker/${COMPONENT}.properties.template" "/etc/${COMPONENT}/${COMPONENT}.properties"
dub template "/etc/confluent/docker/log4j.properties.template" "/etc/${COMPONENT}/log4j.properties"
dub template "/etc/confluent/docker/tools-log4j.properties.template" "/etc/${COMPONENT}/tools-log4j.properties"
